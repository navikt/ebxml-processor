name: "PROD: Build and deploy to prod (via build.yaml)"
on:
  workflow_dispatch:
    branches:
      - main

jobs:
  build:
    name: "build"
    runs-on: "ubuntu-24.04"
    permissions:
      packages: write
      repository-projects: write
      contents: write
      id-token: write
    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-java@v4"
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Cache gradle wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-
      - name: "Build and tests"
        run: ./gradlew test build
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker build and push ebms-provider
        uses: nais/docker-build-push@v0
        id: docker-push-ebms-provider
        with:
          team: team-emottak # required
          tag: ${{ github.sha }}
          dockerfile: Dockerfile # optional, default Dockerfile
          docker_context: ebms-provider # optional, default .
          image_suffix: ebms-provider
      - name: Docker build and push ebms-payload
        uses: nais/docker-build-push@v0
        id: docker-push-ebms-payload
        with:
          team: team-emottak # required
          tag: ${{ github.sha }}
          dockerfile: Dockerfile # optional, default Dockerfile
          docker_context: ebms-payload # optional, default .
          image_suffix: ebms-payload
      - name: Docker build and push cpa-repo
        uses: nais/docker-build-push@v0
        id: docker-push-cpa-repo
        with:
          team: team-emottak # required
          tag: ${{ github.sha }}
          dockerfile: Dockerfile # optional, default Dockerfile
          docker_context: cpa-repo # optional, default .
          image_suffix: cpa-repo
    outputs:
      providerimage: ${{ steps.docker-push-ebms-provider.outputs.image }}
      payloadimage: ${{ steps.docker-push-ebms-payload.outputs.image }}
      cpaimage: ${{ steps.docker-push-cpa-repo.outputs.image }}
  deploy-processor:
    name: "Deploy ebms provider to prod"
    needs: "build"
    runs-on: "ubuntu-24.04"
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: "actions/checkout@v4"
      - name: "Deploy to PROD"
        uses: "nais/deploy/actions/deploy@v2"
        env:
          CLUSTER: "prod-fss"
          RESOURCE: ".nais/ebms-provider-prod.yaml"
          IMAGE: ${{ needs.build.outputs.providerimage }}
  deploy-cpa-repo:
    name: "Deploy cpa-repo to prod"
    needs: "build"
    runs-on: "ubuntu-24.04"
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: "actions/checkout@v4"
      - name: "Deploy to PROD"
        uses: "nais/deploy/actions/deploy@v2"
        env:
          CLUSTER: "prod-fss"
          RESOURCE: ".nais/cpa-repo-prod.yaml"
          IMAGE: ${{ needs.build.outputs.cpaimage }}
  deploy-ebms-payload:
    name: "Deploy ebms-payload to prod"
    needs: "build"
    runs-on: "ubuntu-24.04"
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: "actions/checkout@v4"
      - name: "Deploy to PROD"
        uses: "nais/deploy/actions/deploy@v2"
        env:
          CLUSTER: "prod-fss"
          RESOURCE: ".nais/ebms-payload-prod.yaml"
          IMAGE: ${{ needs.build.outputs.payloadimage }}
